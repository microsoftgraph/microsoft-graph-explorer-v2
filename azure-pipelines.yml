pool:
  vmImage: 'vs2017-win2016'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'npm install'

  - script: |
      npm run lint
    displayName: 'Runs linting checks'

  - script: |
      npm test -- --coverage
    displayName: 'Runs tests'

  - script: |
      npm run build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    env:
      REACT_APP_CLIENT_ID: $(REACT_APP_STAGING_CLIENT_ID)
      REACT_APP_INSTRUMENTATION_KEY: $(REACT_APP_STAGING_INSTRUMENTATION_KEY)
    displayName: 'Build static assets for staging'

  - script: |
      npm run build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    env:
      REACT_APP_CLIENT_ID: $(REACT_APP_PROD_CLIENT_ID)
      REACT_APP_INSTRUMENTATION_KEY: $(REACT_APP_INSTRUMENTATION_KEY)
    displayName: 'Build static assets for prod'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: 'coverage/clover.xml'
      reportDirectory: 'coverage'

  - task: DeleteFiles@1
    inputs:
      contents: node_modules
    displayName: 'Delete node_modules'

  - task: AzureRmWebAppDeployment@3
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    inputs:
      azureSubscription: 'Graph-Explorer-ARM'
      WebAppName: 'graphTryIt-staging'
      Package: '$(System.DefaultWorkingDirectory)'
      GenerateWebConfig: true
      WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
    displayName: 'Deploy to staging'

  - task: AzureFileCopy@2
    inputs:
      sourcePath: 'build'
      azureConnectionType: 'ConnectedServiceNameARM'
      azureSubscription: 'arm-connection'
      destination: 'azureBlob'
      storage: 'graphstagingblobstorage'
      containerName: 'staging/vendor/bower_components/explorer-v2/build'
      cleanTargetBeforeCopy: true
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    displayName: 'Deploy to -tst'

  - task: AzureRmWebAppDeployment@3
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      azureSubscription: 'Graph-Explorer-ARM'
      WebAppName: 'graphTryIt'
      Package: '$(System.DefaultWorkingDirectory)'
      GenerateWebConfig: true
      WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
    displayName: 'Deploy to production'

  - task: YodLabs.O365PostMessage.O365PostMessageBuild.O365PostMessageBuild@0
    displayName: 'Graph Client Tooling pipeline fail notification'
    inputs:
      addressType: serviceEndpoint
      serviceEndpointName: 'microsoftgraph pipeline status'
      title: '$(Build.DefinitionName) failure notification'
      text: 'This pipeline has failed. View the build details for further information. This is a blocking failure. '
    condition: failed()
    enabled: true
